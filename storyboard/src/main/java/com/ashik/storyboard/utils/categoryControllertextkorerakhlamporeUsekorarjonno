package com.ashik.storyboard.controllers;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ashik.storyboard.payloads.ApiResponse;
import com.ashik.storyboard.payloads.CategoryDTO;
import com.ashik.storyboard.services.CategoryService;

@RestController
@RequestMapping("/api/categories")
public class CategoryControllers {
	
	@Autowired
	private CategoryService categoryService;
	
	//create
	@PostMapping("/")
	public ResponseEntity<CategoryDTO> createcategory(@Valid @RequestBody CategoryDTO categoryDTO) {
		
		CategoryDTO categoryDTO2 =  this.categoryService.createCategory(categoryDTO);
		
		return new ResponseEntity<CategoryDTO>(categoryDTO2, HttpStatus.CREATED);
		
	}
	
	
	//update
	
	@PutMapping("/{catId}")
	public ResponseEntity<CategoryDTO> updatecategory(@Valid @RequestBody CategoryDTO categoryDTO,
			@PathVariable("catId") Integer catId) {
		
		CategoryDTO categoryDTO2 =  this.categoryService.updateCategory(categoryDTO, catId);
		
		return new ResponseEntity<CategoryDTO>(categoryDTO2, HttpStatus.OK);
		
	}
	
	
	
	//delete
	
	@DeleteMapping("/{catId}")
	public ResponseEntity<ApiResponse> deletecategory(
			@PathVariable("catId") Integer catId) {
		
		this.categoryService.deleteCategory(catId);
		
		return new ResponseEntity<ApiResponse>(new ApiResponse("category deleted successfully",true), HttpStatus.OK);
		
	}
	
	
	
	//get
	@GetMapping("/{catId}")
	public ResponseEntity<CategoryDTO> getcategory(@PathVariable("catId") Integer catId) {
		
		CategoryDTO categoryDTO = this.categoryService.getCategory(catId);
		
		return new ResponseEntity<CategoryDTO>(categoryDTO, HttpStatus.OK);
		
	}
	
	
	
	
	//getalll
	
	@GetMapping("/")
	public ResponseEntity<List<CategoryDTO>> getallcategory() {
		
		List<CategoryDTO>categoryDTOs = this.categoryService.getallCategories();
		
		return new ResponseEntity<List<CategoryDTO>>(categoryDTOs, HttpStatus.OK);
		
	}
	

}
